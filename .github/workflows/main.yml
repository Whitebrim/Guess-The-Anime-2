name: Build âœ¨

on: [push, pull_request]

jobs:
  buildForAndroid:
    name: Build for Android
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    outputs: 
      app-version: ${{ steps.build.outputs.buildVersion }}
      android-version: ${{ steps.build.outputs.androidVersionCode }}
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      #- uses: jlumbroso/free-disk-space@v1.3.1
              
      # Test
      #- name: Run tests
      #  uses: game-ci/unity-test-runner@v4
      #  env:
      #    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #    UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      #    UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      #  with:
      #    githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build
        id: build
        uses: game-ci/unity-builder@v4.1.3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: Android
          androidExportType: 'androidAppBundle'
          buildsPath: Builds
          androidKeystoreName: user.keystore
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}
          androidTargetSdkVersion: AndroidApiLevel34
          androidSymbolType: debugging
          #customParameters: -Development

      # Output
      - uses: actions/upload-artifact@v4
        with:
          name: build-Android
          path: Builds/Android

  releaseToGooglePlay:
    name: Release to the Google Play Store
    runs-on: ubuntu-latest
    needs: buildForAndroid
    env:
      GOOGLE_PLAY_KEY_FILE: ${{ secrets.GOOGLE_PLAY_KEY_FILE }}
      GOOGLE_PLAY_KEY_FILE_PATH: ${{ github.workspace }}/fastlane/google-fastlane.json
      ANDROID_BUILD_FILE_PATH: ${{ github.workspace }}/Builds/Android/Android.aab
      ANDROID_MAPPING_PATH: ${{ github.workspace }}/Builds/Android/Android-${{ needs.buildForAndroid.outputs.app-version }}-v${{ needs.buildForAndroid.outputs.android-version }}-IL2CPP.symbols.zip
      ANDROID_PACKAGE_NAME: ${{ vars.ANDROID_PACKAGE_NAME }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download Android Artifact
        uses: actions/download-artifact@v4.1.0
        with:
          name: build-Android
          path: Builds/Android
      - name: Add Authentication
        run: echo "$GOOGLE_PLAY_KEY_FILE" > $GOOGLE_PLAY_KEY_FILE_PATH
      - name: Set up Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true
      - name: Upload to Google Play Internal
        uses: maierj/fastlane-action@v3.0.0
        with:
          lane: 'android internal' # Change to upload to a different lane
      - name: Cleanup to avoid storage limit
        if: always()
        uses: geekyeggo/delete-artifact@v2
        with:
          name: build-Android
