name: Build âœ¨

on: [push, pull_request]

jobs:
  buildForAndroid:
    name: Build for Android
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - build_type: debug
            androidExportType: 'androidPackage'
            androidSymbolType: 'none'
            customParameters: '-Development'
          - build_type: release
            androidExportType: 'androidAppBundle'
            androidSymbolType: 'debugging'
            customParameters: ''
    outputs: 
      app-version: ${{ steps.build.outputs.buildVersion }}
      android-version: ${{ steps.build.outputs.androidVersionCode }}
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          lfs: true

      # Cache
      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Disable Lunar Console
      - name: Disable Lunar Console
        if: matrix.build_type == 'release'
        run: bash Assets/Plugins/LunarConsole/Editor/Automation/disable_lunar_console.sh

      # Build
      - name: Build
        id: build
        uses: game-ci/unity-builder@v4.1.4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: Android
          androidExportType: ${{ matrix.androidExportType }}
          buildsPath: Builds
          androidKeystoreName: user.keystore
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}
          androidTargetSdkVersion: AndroidApiLevel34
          androidSymbolType: ${{ matrix.androidSymbolType }}
          customParameters: ${{ matrix.customParameters }}
          
      # Output Debug
      - uses: actions/upload-artifact@v4
        if: matrix.build_type == 'debug'
        with:
          name: gta_${{ steps.build.outputs.buildVersion }}.apk
          path: Builds/Android/Android.apk
          
      # Output Release
      - uses: actions/upload-artifact@v4
        if: matrix.build_type == 'release'
        with:
          name: release-build-Android
          path: Builds/Android

  releaseToGooglePlay:
    name: Publish to the Google Play Store
    runs-on: ubuntu-latest
    needs: buildForAndroid
    env:
      GOOGLE_PLAY_KEY_FILE: ${{ secrets.GOOGLE_PLAY_KEY_FILE }}
      GOOGLE_PLAY_KEY_FILE_PATH: ${{ github.workspace }}/fastlane/google-fastlane.json
      ANDROID_BUILD_FILE_PATH: ${{ github.workspace }}/Builds/Android/Android.aab
      ANDROID_MAPPING_PATH: ${{ github.workspace }}/Builds/Android/Android-${{ needs.buildForAndroid.outputs.app-version }}-v${{ needs.buildForAndroid.outputs.android-version }}-IL2CPP.symbols.zip
      ANDROID_PACKAGE_NAME: ${{ vars.ANDROID_PACKAGE_NAME }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
        
      - name: Download Artifact
        uses: actions/download-artifact@v4.1.5
        with:
          name: release-build-Android
          path: Builds/Android
          
      - name: Add Authentication
        run: echo "$GOOGLE_PLAY_KEY_FILE" > $GOOGLE_PLAY_KEY_FILE_PATH
        
      - name: Set up Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true
          
      - name: Upload to Google Play Console
        uses: maierj/fastlane-action@v3.0.0
        with:
          lane: 'android internal' # Change to upload to a different lane
          
      - name: Delete artifact
        if: always()
        uses: geekyeggo/delete-artifact@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: release-build-Android